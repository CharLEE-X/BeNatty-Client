[versions]
# CONFIG --------------------------------------------------------------------------------------------------------------
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
packageName = "com.charleex.nataliashop"
jvmTarget = "17"

# VERSIONS  -----------------------------------------------------------------------------------------------------------
agp = "8.1.4"
androidx-activityCompose = "1.8.2"
bcrypt = "0.10.2"
compose = "1.5.11"
composeGoogle = "1.5.4"
detekt = "1.23.0"
expedia = "7.0.2"
javalin = "4.6.8"
junit = "5.10.1"
kermit = "2.0.2"
kluent = "1.73"
kobweb = "0.15.4"
koin = "3.5.0"
koinKtor = "3.5.1"
kotlin = "1.9.21"
kotlinxCoroutinesTest = "1.7.3"
kover = "0.7.4"
ktLint = "11.6.1"
ktor = "2.3.7"
libPhoneNumber = "8.13.26"
logback = "1.4.14"
mail = "1.4"
mockk = "1.13.8"
mongodb = "4.11.1"
shadow = "7.1.2"
testContainers = "1.19.1"

[libraries]
# ANDROID ----------------------------------------------------------------------------------------------------- ANDROID
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

# COMPOSE ----------------------------------------------------------------------------------------------------- COMPOSE
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeGoogle" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeGoogle" }

# EXPEDIA ----------------------------------------------------------------------------------------------------- EXPEDIA
expedia-server = { module = "com.expediagroup:graphql-kotlin-server", version.ref = "expedia" }
expedia-ktor-server = { module = "com.expediagroup:graphql-kotlin-ktor-server", version.ref = "expedia" }
expedia-federation = { module = "com.expediagroup:graphql-kotlin-federation", version.ref = "expedia" }

graphql-scalars = "com.graphql-java:graphql-java-extended-scalars:20.2"

javalin-core = { module = "io.javalin:javalin", version.ref = "javalin" }

# KERMIT ------------------------------------------------------------------------------------------------------- KERMIT
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

# KOBWEB ------------------------------------------------------------------------------------------------------- KOBWEB
kobweb-api = { module = "com.varabyte.kobweb:kobweb-api", version.ref = "kobweb" }
kobweb-core = { module = "com.varabyte.kobweb:kobweb-core ", version.ref = "kobweb" }
kobweb-silk = { module = "com.varabyte.kobweb:kobweb-silk", version.ref = "kobweb" }
kobweb-worker = { module = "com.varabyte.kobweb:kobweb-worker", version.ref = "kobweb" }
kobwebx-markdown = { module = "com.varabyte.kobwebx:kobwebx-markdown", version.ref = "kobweb" }
silk-foundation = { module = "com.varabyte.kobweb:silk-foundation", version.ref = "kobweb" }
silk-icons-fa = { module = "com.varabyte.kobwebx:silk-icons-fa", version.ref = "kobweb" }
silk-icons-mdi = { module = "com.varabyte.kobwebx:silk-icons-mdi", version.ref = "kobweb" }

# KOIN ----------------------------------------------------------------------------------------------------------- KOIN
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koinKtor" }
koin-logger = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koinKtor" }

# KOTLIN ------------------------------------------------------------------------------------------------------- KOTLIN
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }

# KTOR-CLIENT --------------------------------------------------------------------------------------------- KTOR-CLIENT
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-content = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# KTOR-SERVER --------------------------------------------------------------------------------------------- KTOR-SERVER
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-websocket = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }

validator-libPhoneNumber = { module = "com.googlecode.libphonenumber:libphonenumber", version.ref = "libPhoneNumber" }
validator-mail = { module = "javax.mail:mail", version.ref = "mail" }

server-bcrypt = { module = "at.favre.lib:bcrypt", version.ref = "bcrypt" }
server-logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
server-mongodb = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodb" }

# TESTING ----------------------------------------------------------------------------------------------------- TESTING
test-kluent = { module = "org.amshove.kluent:kluent", version.ref = "kluent" }
test-koin = { module = "io.insert-koin:koin-test", version.ref = "koin" }
test-kotlin-ktor-server = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
test-kotlin-ktor-serverHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
test-testContainers-mongo = { module = "org.testcontainers:mongodb", version.ref = "testContainers" }
test-testContainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testContainers" }

test-junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
test-junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
test-junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
test-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose" }
kobweb-application = { id = "com.varabyte.kobweb.application", version.ref = "kobweb" }
kobweb-library = { id = "com.varabyte.kobweb.library", version.ref = "kobweb" }
kobwebx-markdown = { id = "com.varabyte.kobwebx.markdown", version.ref = "kobweb" }
kobweb-worker = { id = "com.varabyte.kobweb.worker", version.ref = "kobweb" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ktLint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktLint" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }

